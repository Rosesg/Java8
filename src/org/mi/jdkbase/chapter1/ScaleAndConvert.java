package org.mi.jdkbase.chapter1;

/**
 *  进制和转换
 *     1. 计算机所有的数据都是以二进制数字保存的，也就是0和1。比如十进制中的10，在计算机内保存为二进制的1010（如果为int类型：32位 其他位补0）
 *     2. 位：bit，是计算机存储处理信息的最基本单位。注意和字节的区别，字节为计算机文件大小的基本单位。每一位是0或者1的二进制数码。
 *     3. 引出十六进制的原因：二进制表示法太冗长，所以程序中一般喜欢用十六进制，当然也是为了装逼。十六进制表示：以0x或者0X开头
 *          十六进制转换成二进制只需要将每个十六进制数字替换为相应的四个二进制位码即可：比如 0x0  0000；0xF  1111
 *     4. 补码：事实上，计算机内的二进制数值是以补码的形式表示的。正数的补码和原码相同，负数的补码是该数的绝对值的二进制形式，按位取反再加1。
 *          由此可知，二进制补码数值的最高位是符号位，0表示正数，1表示负数。
 *          使用补码，可以将符号位和其他位统一处理，也就是说减法也是加法。
 *          两个用补码表示的数相加时，如果最高位有进位，则进位被舍弃。
 */
public class ScaleAndConvert {
    public static void main(String[] args) {
        int a = 10; // 补码：00000000 00000000 00000000 00001010
        int b = -10;// 补码：11111111 11111111 11111111 11110101 + 00000000 00000000 00000000 00000001
                          // = 11111111 11111111 11111111 11110110
        //按照补码来存储，所有的数都可以加了，哈哈！
        System.out.println(a+b);
        // 0.25 转成二进制
        // 0.5             *2
        // 1.0
        // 0.01         注：整数部分，逆序取余，小数部分，顺序取整

        // Java代码中出现十六进制的多一些，因为简洁装逼
        int x = 0x25;
        System.out.println(x);
    }
}
